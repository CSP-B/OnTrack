MACHINE DJContext

/* Date: Tue Dec 11 16:11:30 GMT 2012
 * Notes: supporting Copy.bjoernercomplete model with 8 trains 
 * Automatically generated by TrackScheme2CSPB tool version 0.1
 * Authors of Tool: Matthew Treumble and Helen Treharne
 * Authors: Moller, Nguyen, Roggenbach, Schneider, Treharne
 * Corresponding Authors: S.Schneider@surrey.ac.uk, H.Treharne@surrey.ac.uk
 *
 */

[%
var bMachine1 = BMachine!Machine.all().first();
%]

/* Datatype definitions supporting track plan */
SETS
[%
for (s in bMachine1.hasSets)
{
	out.println( s.write() );
}
%]
    TRACKSTATUS = {occ,empty};
    POINTPOSITION = {normal,reverse};
    POINTSTATUS = {locked, unlocked};
    ASPECT = {red,green};
    TRAIN = {albert,bertie,clara,doris,edgar,faron,gladys,hugo}
    


/* Restricted datatype definitions */
CONSTANTS
    ENTRY,
    EXIT,
    SIGNALSTATUS, 
    TRACK
    

PROPERTIES
[%
for (p in bMachine1.hasProperties)
{
	out.println( p.write() );
}
%]
    SIGNALSTATUS = ASPECT &
    TRACK = ALLTRACK - {nullTrack}
	
END

[%

operation BMachine!BSet write() : String {

	var toReturn = "    " + self.name + " = {";
	
	for (el in self.hasSetElements)
	{
		toReturn = toReturn + el.name;
		
		if (hasMore) {toReturn = toReturn + ", ";}
	}
	
	toReturn = toReturn + "};";
	return toReturn;
}

operation BMachine!Property write() : String {
	
	var toReturn = "    " + self.name + " = {";
	
	for (pe in self.hasPropElements) {
		
		// print domain elements
		for (de in pe.hasDomainElements) {
			
			// if more than one element enclose in brackets
			if ((loopCount = 1) and hasMore) {toReturn = toReturn + "(";}
			
			toReturn = toReturn + de.name;
			if (hasMore) {toReturn = toReturn + ", ";}
				
			// close brackets if appropriate
			if ((not hasMore) and (loopCount > 1)) {toReturn = toReturn + ")";}
		}
		
		// if range set is present
		if (pe.hasRangeSet.isDefined()) {
			
			// print |->
			toReturn = toReturn + " |-> ";
			
			// print set
			toReturn = toReturn + pe.hasRangeSet.write();
			
			// remove trailing ';'
			if (toReturn.endsWith(";")) {
			
				toReturn = toReturn.subString(0, toReturn.length-2);
			}
		}
		
		// print range elements
		for (re in pe.hasRangeElements) {
		
			// print |->
			if (loopCount = 1) {toReturn = toReturn + " |-> ";}
			
			// if more than one element enclose in brackets
			if ((loopCount = 1) and hasMore) {toReturn = toReturn + "(";}
			
			toReturn = toReturn + re.name;
			if (hasMore) {toReturn = toReturn + ", ";}
				
			// close brackets if appropriate
			if ((not hasMore) and (loopCount > 1)) {toReturn = toReturn + ")";}
		}
		
		if (hasMore) {toReturn = toReturn + ", ";}
	}
	
	toReturn = toReturn + "} &";
	return toReturn;
}

%]

